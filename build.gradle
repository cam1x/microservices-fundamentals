plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.palantir.docker'
}

jar {
    enabled = false
}

allprojects {
    group("${group}")

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
        mavenLocal()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "com.palantir.docker"

    configurations {
        cucumberRuntime {
            extendsFrom testImplementation
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

        testImplementation "org.postgresql:postgresql"

        testImplementation platform("org.testcontainers:testcontainers-bom:${testContainersVersion}")
        testImplementation "org.testcontainers:testcontainers"
        testImplementation "org.testcontainers:junit-jupiter"
        testImplementation "org.testcontainers:postgresql"

        testImplementation platform("io.cucumber:cucumber-bom:${cucumberVersion}")
        testImplementation "io.cucumber:cucumber-java"
        testImplementation "io.cucumber:cucumber-spring"
        testImplementation "io.cucumber:cucumber-junit"
        testImplementation "io.cucumber:cucumber-junit-platform-engine"

        testImplementation platform("org.junit:junit-bom:${junitVersion}")
        testImplementation "org.junit.platform:junit-platform-suite"

        testImplementation "io.rest-assured:rest-assured"
        testImplementation "io.rest-assured:spring-mock-mvc"
    }

    tasks.dockerPrepare.configure {
        dependsOn(tasks.bootJar.name)
    }

    docker {
        dependsOn build
        name = "microservices/${project.name}:latest"
        setDockerfile(file("Dockerfile"))
        files bootJar.archiveFile.get().asFile
        buildArgs(["JAR_FILE": "${bootJar.archiveFileName.get()}"])
    }

    test() {
        useJUnitPlatform()
        environment "spring.profiles.active", "test"

        testLogging {
            events "passed", "skipped", "failed"
        }

        filter {
            excludeTestsMatching "*.CucumberTest"
            excludeTestsMatching "*.*ContractTest"
        }
    }

    test.finalizedBy jacocoTestReport

    task cucumber() {
        dependsOn assemble, testClasses
        doLast {
            javaexec {
                main = "io.cucumber.core.cli.Main"
                classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                args = ['--plugin', 'pretty', '--glue', 'com.chachotkin.resource.service', 'src/test/resources']
                environment += ['CUCUMBER_PUBLISH_ENABLED': 'true', 'spring.profiles.active': 'test']
            }
        }
    }

    task consumerContractTest(type: Test, group: 'verification') {
        useJUnitPlatform()
        description = "Task to run contract tests"
        environment "spring.profiles.active", "test"

        testLogging {
            events "passed", "skipped", "failed"
        }

        include("**/contract/**")
    }
}